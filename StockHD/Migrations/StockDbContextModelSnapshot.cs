// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StockHD.Data;

#nullable disable

namespace StockHD.Migrations
{
    [DbContext(typeof(StockDbContext))]
    partial class StockDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.25");

            modelBuilder.Entity("AssetTypeExtendedProperty", b =>
                {
                    b.Property<int>("AssetTypesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Propertiesid")
                        .HasColumnType("INTEGER");

                    b.HasKey("AssetTypesId", "Propertiesid");

                    b.HasIndex("Propertiesid");

                    b.ToTable("AssetTypeExtendedProperty");
                });

            modelBuilder.Entity("StockHD.Models.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AssetTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("LocationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AssetTypeId");

                    b.HasIndex("LocationId");

                    b.ToTable("Assets", (string)null);
                });

            modelBuilder.Entity("StockHD.Models.AssetType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AssetType", (string)null);
                });

            modelBuilder.Entity("StockHD.Models.ExtendedProperty", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Properties", (string)null);
                });

            modelBuilder.Entity("StockHD.Models.ExtendedPropertyValue", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AssetId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Propertyid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("AssetId");

                    b.HasIndex("Propertyid");

                    b.ToTable("PropertiesValues", (string)null);
                });

            modelBuilder.Entity("StockHD.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Locations", (string)null);
                });

            modelBuilder.Entity("AssetTypeExtendedProperty", b =>
                {
                    b.HasOne("StockHD.Models.AssetType", null)
                        .WithMany()
                        .HasForeignKey("AssetTypesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StockHD.Models.ExtendedProperty", null)
                        .WithMany()
                        .HasForeignKey("Propertiesid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StockHD.Models.Asset", b =>
                {
                    b.HasOne("StockHD.Models.AssetType", "AssetType")
                        .WithMany("Assets")
                        .HasForeignKey("AssetTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StockHD.Models.Location", "Location")
                        .WithMany("Assets")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssetType");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("StockHD.Models.ExtendedPropertyValue", b =>
                {
                    b.HasOne("StockHD.Models.Asset", "Asset")
                        .WithMany("PorpertiesValues")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StockHD.Models.ExtendedProperty", "Property")
                        .WithMany()
                        .HasForeignKey("Propertyid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("StockHD.Models.Asset", b =>
                {
                    b.Navigation("PorpertiesValues");
                });

            modelBuilder.Entity("StockHD.Models.AssetType", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("StockHD.Models.Location", b =>
                {
                    b.Navigation("Assets");
                });
#pragma warning restore 612, 618
        }
    }
}
