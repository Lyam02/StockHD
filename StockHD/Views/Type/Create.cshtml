@model StockHD.Models.AssetType;

@using StockHD.Models;
@using StockHD.Data;


    <form asp-action="Create" id="formData">

    <div class="form-floating mb-3">
    <input asp-for="Name" class="form-control" placeholder="" />
        <label asp-for="Name" class="control-label"></label>
    </div>

    <div id="PropDiv">
        <div class="form-floating mb-3">
            <select class="form-control typeProp" name="TypeSelect" placeholder="">
            <option selected=""></option>
            @foreach (ExtendedProperty p in ViewBag.ExtendedProperty){
                <option value="@p.Id">@p.Name</option>
            }
            </select>
            <label asp-for="Properties"></label>
            <span asp-validation-for="Properties" class="text-danger"></span>
        </div>

    </div>


    <div class="mb-3">
        <button type="button" id="Prop" class="btn btn-success" data-bs-toggle="tooltip" data-bs-placement="right"
                data-bs-title="Vous pouvez ajoutez d'autres Propriété en cliquant ici !">
            +
        </button>
    </div>

    <input type="hidden" name="jsonProp" id="jsonProp" />

    <div class="form-floating mb-3">
    <input asp-for="Description" class="form-control" placeholder="" />
    <label asp-for="Description" class="control-label"></label>
    <span asp-validation-for="Description" class="text-danger"></span><br/>
    </div>


    <input type="button" value="Ajouter" class="btn btn-primary" onclick="submitForm();" />
    <a class="btn btn-danger" asp-action="Index">Annuler</a>
     
    </form>

    @* For bootstrap tooltips button *@
    <script>
            const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]')
            const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl))
    </script>
    
    @* For button add new properties *@
    <script>
        $(document).ready(function(){
            $("#Prop").click(function(){

             $.get('@Url.Action("GetProperties")',function (data) {
            $("#PropDiv").append(data);
        });
       
        
    });
            });
    </script>

    @*For Send Json with the properties data*@
    <script>
        
        function submitForm(){
            var PropData = new Object();
            PropData.Properties = [];

            $('.typeProp').each(function(){
                 var optVal= $(this).find('option:selected').val()
                 PropData.Properties.push(optVal);
            });
            var jsonStr = JSON.stringify(PropData)
            $('#jsonProp').val(jsonStr);

            $('#formData').submit();
    }
    </script>

@*Faire en sorte que le bouton lance seulement le script jquery et donc enlever le type submit pour que jquery le fasse lui a la fin du script.
  Faire un json et le mettre dans un champ hidden.*@

@*$('#databaseActionForm').submit();*@